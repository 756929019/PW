//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PW.ServiceCenter.ServiceUser {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/PW.DBCommon.Model")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AVATAR_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CREATE_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DEPT_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMAILField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ENABLEDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> JOB_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LAST_PASSWORD_RESET_TIMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICK_NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PASSWORDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PHONEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SEXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERNAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AVATAR_ID {
            get {
                return this.AVATAR_IDField;
            }
            set {
                if ((this.AVATAR_IDField.Equals(value) != true)) {
                    this.AVATAR_IDField = value;
                    this.RaisePropertyChanged("AVATAR_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CREATE_TIME {
            get {
                return this.CREATE_TIMEField;
            }
            set {
                if ((this.CREATE_TIMEField.Equals(value) != true)) {
                    this.CREATE_TIMEField = value;
                    this.RaisePropertyChanged("CREATE_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DEPT_ID {
            get {
                return this.DEPT_IDField;
            }
            set {
                if ((this.DEPT_IDField.Equals(value) != true)) {
                    this.DEPT_IDField = value;
                    this.RaisePropertyChanged("DEPT_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMAIL {
            get {
                return this.EMAILField;
            }
            set {
                if ((object.ReferenceEquals(this.EMAILField, value) != true)) {
                    this.EMAILField = value;
                    this.RaisePropertyChanged("EMAIL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ENABLED {
            get {
                return this.ENABLEDField;
            }
            set {
                if ((this.ENABLEDField.Equals(value) != true)) {
                    this.ENABLEDField = value;
                    this.RaisePropertyChanged("ENABLED");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> JOB_ID {
            get {
                return this.JOB_IDField;
            }
            set {
                if ((this.JOB_IDField.Equals(value) != true)) {
                    this.JOB_IDField = value;
                    this.RaisePropertyChanged("JOB_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LAST_PASSWORD_RESET_TIME {
            get {
                return this.LAST_PASSWORD_RESET_TIMEField;
            }
            set {
                if ((this.LAST_PASSWORD_RESET_TIMEField.Equals(value) != true)) {
                    this.LAST_PASSWORD_RESET_TIMEField = value;
                    this.RaisePropertyChanged("LAST_PASSWORD_RESET_TIME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NICK_NAME {
            get {
                return this.NICK_NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NICK_NAMEField, value) != true)) {
                    this.NICK_NAMEField = value;
                    this.RaisePropertyChanged("NICK_NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PASSWORD {
            get {
                return this.PASSWORDField;
            }
            set {
                if ((object.ReferenceEquals(this.PASSWORDField, value) != true)) {
                    this.PASSWORDField = value;
                    this.RaisePropertyChanged("PASSWORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHONE {
            get {
                return this.PHONEField;
            }
            set {
                if ((object.ReferenceEquals(this.PHONEField, value) != true)) {
                    this.PHONEField = value;
                    this.RaisePropertyChanged("PHONE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SEX {
            get {
                return this.SEXField;
            }
            set {
                if ((object.ReferenceEquals(this.SEXField, value) != true)) {
                    this.SEXField = value;
                    this.RaisePropertyChanged("SEX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERNAME {
            get {
                return this.USERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.USERNAMEField, value) != true)) {
                    this.USERNAMEField = value;
                    this.RaisePropertyChanged("USERNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceUser.IServiceUser")]
    public interface IServiceUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/query", ReplyAction="http://tempuri.org/IServiceUser/queryResponse")]
        PW.ServiceCenter.ServiceUser.user[] query(PW.ServiceCenter.ServiceUser.user record);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/query", ReplyAction="http://tempuri.org/IServiceUser/queryResponse")]
        System.IAsyncResult Beginquery(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState);
        
        PW.ServiceCenter.ServiceUser.user[] Endquery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/queryPage", ReplyAction="http://tempuri.org/IServiceUser/queryPageResponse")]
        PW.ServiceCenter.ServiceUser.user[] queryPage(PW.ServiceCenter.ServiceUser.user record);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/queryPage", ReplyAction="http://tempuri.org/IServiceUser/queryPageResponse")]
        System.IAsyncResult BeginqueryPage(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState);
        
        PW.ServiceCenter.ServiceUser.user[] EndqueryPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/deleteById", ReplyAction="http://tempuri.org/IServiceUser/deleteByIdResponse")]
        int deleteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/deleteById", ReplyAction="http://tempuri.org/IServiceUser/deleteByIdResponse")]
        System.IAsyncResult BegindeleteById(int id, System.AsyncCallback callback, object asyncState);
        
        int EnddeleteById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/add", ReplyAction="http://tempuri.org/IServiceUser/addResponse")]
        int add(PW.ServiceCenter.ServiceUser.user record);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/add", ReplyAction="http://tempuri.org/IServiceUser/addResponse")]
        System.IAsyncResult Beginadd(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState);
        
        int Endadd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/updateById", ReplyAction="http://tempuri.org/IServiceUser/updateByIdResponse")]
        int updateById(PW.ServiceCenter.ServiceUser.user record);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/updateById", ReplyAction="http://tempuri.org/IServiceUser/updateByIdResponse")]
        System.IAsyncResult BeginupdateById(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState);
        
        int EndupdateById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/getById", ReplyAction="http://tempuri.org/IServiceUser/getByIdResponse")]
        PW.ServiceCenter.ServiceUser.user getById(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IServiceUser/getById", ReplyAction="http://tempuri.org/IServiceUser/getByIdResponse")]
        System.IAsyncResult BegingetById(int id, System.AsyncCallback callback, object asyncState);
        
        PW.ServiceCenter.ServiceUser.user EndgetById(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUserChannel : PW.ServiceCenter.ServiceUser.IServiceUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class queryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public queryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PW.ServiceCenter.ServiceUser.user[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PW.ServiceCenter.ServiceUser.user[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class queryPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public queryPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PW.ServiceCenter.ServiceUser.user[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PW.ServiceCenter.ServiceUser.user[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class deleteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public deleteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PW.ServiceCenter.ServiceUser.user Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PW.ServiceCenter.ServiceUser.user)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUserClient : System.ServiceModel.ClientBase<PW.ServiceCenter.ServiceUser.IServiceUser>, PW.ServiceCenter.ServiceUser.IServiceUser {
        
        private BeginOperationDelegate onBeginqueryDelegate;
        
        private EndOperationDelegate onEndqueryDelegate;
        
        private System.Threading.SendOrPostCallback onqueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginqueryPageDelegate;
        
        private EndOperationDelegate onEndqueryPageDelegate;
        
        private System.Threading.SendOrPostCallback onqueryPageCompletedDelegate;
        
        private BeginOperationDelegate onBegindeleteByIdDelegate;
        
        private EndOperationDelegate onEnddeleteByIdDelegate;
        
        private System.Threading.SendOrPostCallback ondeleteByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddDelegate;
        
        private EndOperationDelegate onEndaddDelegate;
        
        private System.Threading.SendOrPostCallback onaddCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateByIdDelegate;
        
        private EndOperationDelegate onEndupdateByIdDelegate;
        
        private System.Threading.SendOrPostCallback onupdateByIdCompletedDelegate;
        
        private BeginOperationDelegate onBegingetByIdDelegate;
        
        private EndOperationDelegate onEndgetByIdDelegate;
        
        private System.Threading.SendOrPostCallback ongetByIdCompletedDelegate;
        
        public ServiceUserClient() {
        }
        
        public ServiceUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<queryCompletedEventArgs> queryCompleted;
        
        public event System.EventHandler<queryPageCompletedEventArgs> queryPageCompleted;
        
        public event System.EventHandler<deleteByIdCompletedEventArgs> deleteByIdCompleted;
        
        public event System.EventHandler<addCompletedEventArgs> addCompleted;
        
        public event System.EventHandler<updateByIdCompletedEventArgs> updateByIdCompleted;
        
        public event System.EventHandler<getByIdCompletedEventArgs> getByIdCompleted;
        
        public PW.ServiceCenter.ServiceUser.user[] query(PW.ServiceCenter.ServiceUser.user record) {
            return base.Channel.query(record);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginquery(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginquery(record, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PW.ServiceCenter.ServiceUser.user[] Endquery(System.IAsyncResult result) {
            return base.Channel.Endquery(result);
        }
        
        private System.IAsyncResult OnBeginquery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PW.ServiceCenter.ServiceUser.user record = ((PW.ServiceCenter.ServiceUser.user)(inValues[0]));
            return this.Beginquery(record, callback, asyncState);
        }
        
        private object[] OnEndquery(System.IAsyncResult result) {
            PW.ServiceCenter.ServiceUser.user[] retVal = this.Endquery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnqueryCompleted(object state) {
            if ((this.queryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.queryCompleted(this, new queryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void queryAsync(PW.ServiceCenter.ServiceUser.user record) {
            this.queryAsync(record, null);
        }
        
        public void queryAsync(PW.ServiceCenter.ServiceUser.user record, object userState) {
            if ((this.onBeginqueryDelegate == null)) {
                this.onBeginqueryDelegate = new BeginOperationDelegate(this.OnBeginquery);
            }
            if ((this.onEndqueryDelegate == null)) {
                this.onEndqueryDelegate = new EndOperationDelegate(this.OnEndquery);
            }
            if ((this.onqueryCompletedDelegate == null)) {
                this.onqueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnqueryCompleted);
            }
            base.InvokeAsync(this.onBeginqueryDelegate, new object[] {
                        record}, this.onEndqueryDelegate, this.onqueryCompletedDelegate, userState);
        }
        
        public PW.ServiceCenter.ServiceUser.user[] queryPage(PW.ServiceCenter.ServiceUser.user record) {
            return base.Channel.queryPage(record);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginqueryPage(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginqueryPage(record, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PW.ServiceCenter.ServiceUser.user[] EndqueryPage(System.IAsyncResult result) {
            return base.Channel.EndqueryPage(result);
        }
        
        private System.IAsyncResult OnBeginqueryPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PW.ServiceCenter.ServiceUser.user record = ((PW.ServiceCenter.ServiceUser.user)(inValues[0]));
            return this.BeginqueryPage(record, callback, asyncState);
        }
        
        private object[] OnEndqueryPage(System.IAsyncResult result) {
            PW.ServiceCenter.ServiceUser.user[] retVal = this.EndqueryPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnqueryPageCompleted(object state) {
            if ((this.queryPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.queryPageCompleted(this, new queryPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void queryPageAsync(PW.ServiceCenter.ServiceUser.user record) {
            this.queryPageAsync(record, null);
        }
        
        public void queryPageAsync(PW.ServiceCenter.ServiceUser.user record, object userState) {
            if ((this.onBeginqueryPageDelegate == null)) {
                this.onBeginqueryPageDelegate = new BeginOperationDelegate(this.OnBeginqueryPage);
            }
            if ((this.onEndqueryPageDelegate == null)) {
                this.onEndqueryPageDelegate = new EndOperationDelegate(this.OnEndqueryPage);
            }
            if ((this.onqueryPageCompletedDelegate == null)) {
                this.onqueryPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnqueryPageCompleted);
            }
            base.InvokeAsync(this.onBeginqueryPageDelegate, new object[] {
                        record}, this.onEndqueryPageDelegate, this.onqueryPageCompletedDelegate, userState);
        }
        
        public int deleteById(int id) {
            return base.Channel.deleteById(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindeleteById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindeleteById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EnddeleteById(System.IAsyncResult result) {
            return base.Channel.EnddeleteById(result);
        }
        
        private System.IAsyncResult OnBegindeleteById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegindeleteById(id, callback, asyncState);
        }
        
        private object[] OnEnddeleteById(System.IAsyncResult result) {
            int retVal = this.EnddeleteById(result);
            return new object[] {
                    retVal};
        }
        
        private void OndeleteByIdCompleted(object state) {
            if ((this.deleteByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.deleteByIdCompleted(this, new deleteByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void deleteByIdAsync(int id) {
            this.deleteByIdAsync(id, null);
        }
        
        public void deleteByIdAsync(int id, object userState) {
            if ((this.onBegindeleteByIdDelegate == null)) {
                this.onBegindeleteByIdDelegate = new BeginOperationDelegate(this.OnBegindeleteById);
            }
            if ((this.onEnddeleteByIdDelegate == null)) {
                this.onEnddeleteByIdDelegate = new EndOperationDelegate(this.OnEnddeleteById);
            }
            if ((this.ondeleteByIdCompletedDelegate == null)) {
                this.ondeleteByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndeleteByIdCompleted);
            }
            base.InvokeAsync(this.onBegindeleteByIdDelegate, new object[] {
                        id}, this.onEnddeleteByIdDelegate, this.ondeleteByIdCompletedDelegate, userState);
        }
        
        public int add(PW.ServiceCenter.ServiceUser.user record) {
            return base.Channel.add(record);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginadd(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginadd(record, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int Endadd(System.IAsyncResult result) {
            return base.Channel.Endadd(result);
        }
        
        private System.IAsyncResult OnBeginadd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PW.ServiceCenter.ServiceUser.user record = ((PW.ServiceCenter.ServiceUser.user)(inValues[0]));
            return this.Beginadd(record, callback, asyncState);
        }
        
        private object[] OnEndadd(System.IAsyncResult result) {
            int retVal = this.Endadd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddCompleted(object state) {
            if ((this.addCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addCompleted(this, new addCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addAsync(PW.ServiceCenter.ServiceUser.user record) {
            this.addAsync(record, null);
        }
        
        public void addAsync(PW.ServiceCenter.ServiceUser.user record, object userState) {
            if ((this.onBeginaddDelegate == null)) {
                this.onBeginaddDelegate = new BeginOperationDelegate(this.OnBeginadd);
            }
            if ((this.onEndaddDelegate == null)) {
                this.onEndaddDelegate = new EndOperationDelegate(this.OnEndadd);
            }
            if ((this.onaddCompletedDelegate == null)) {
                this.onaddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddCompleted);
            }
            base.InvokeAsync(this.onBeginaddDelegate, new object[] {
                        record}, this.onEndaddDelegate, this.onaddCompletedDelegate, userState);
        }
        
        public int updateById(PW.ServiceCenter.ServiceUser.user record) {
            return base.Channel.updateById(record);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginupdateById(PW.ServiceCenter.ServiceUser.user record, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateById(record, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndupdateById(System.IAsyncResult result) {
            return base.Channel.EndupdateById(result);
        }
        
        private System.IAsyncResult OnBeginupdateById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PW.ServiceCenter.ServiceUser.user record = ((PW.ServiceCenter.ServiceUser.user)(inValues[0]));
            return this.BeginupdateById(record, callback, asyncState);
        }
        
        private object[] OnEndupdateById(System.IAsyncResult result) {
            int retVal = this.EndupdateById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateByIdCompleted(object state) {
            if ((this.updateByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateByIdCompleted(this, new updateByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateByIdAsync(PW.ServiceCenter.ServiceUser.user record) {
            this.updateByIdAsync(record, null);
        }
        
        public void updateByIdAsync(PW.ServiceCenter.ServiceUser.user record, object userState) {
            if ((this.onBeginupdateByIdDelegate == null)) {
                this.onBeginupdateByIdDelegate = new BeginOperationDelegate(this.OnBeginupdateById);
            }
            if ((this.onEndupdateByIdDelegate == null)) {
                this.onEndupdateByIdDelegate = new EndOperationDelegate(this.OnEndupdateById);
            }
            if ((this.onupdateByIdCompletedDelegate == null)) {
                this.onupdateByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateByIdCompleted);
            }
            base.InvokeAsync(this.onBeginupdateByIdDelegate, new object[] {
                        record}, this.onEndupdateByIdDelegate, this.onupdateByIdCompletedDelegate, userState);
        }
        
        public PW.ServiceCenter.ServiceUser.user getById(int id) {
            return base.Channel.getById(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetById(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetById(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PW.ServiceCenter.ServiceUser.user EndgetById(System.IAsyncResult result) {
            return base.Channel.EndgetById(result);
        }
        
        private System.IAsyncResult OnBegingetById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BegingetById(id, callback, asyncState);
        }
        
        private object[] OnEndgetById(System.IAsyncResult result) {
            PW.ServiceCenter.ServiceUser.user retVal = this.EndgetById(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetByIdCompleted(object state) {
            if ((this.getByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getByIdCompleted(this, new getByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getByIdAsync(int id) {
            this.getByIdAsync(id, null);
        }
        
        public void getByIdAsync(int id, object userState) {
            if ((this.onBegingetByIdDelegate == null)) {
                this.onBegingetByIdDelegate = new BeginOperationDelegate(this.OnBegingetById);
            }
            if ((this.onEndgetByIdDelegate == null)) {
                this.onEndgetByIdDelegate = new EndOperationDelegate(this.OnEndgetById);
            }
            if ((this.ongetByIdCompletedDelegate == null)) {
                this.ongetByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetByIdCompleted);
            }
            base.InvokeAsync(this.onBegingetByIdDelegate, new object[] {
                        id}, this.onEndgetByIdDelegate, this.ongetByIdCompletedDelegate, userState);
        }
    }
}
